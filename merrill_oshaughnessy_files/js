//All Mobile Nav

var $hamburgerMenuBtn,
    $slideNav,
    $closeBtn,
    $main;

// focus management variables
var $focusableInNav,
    $firstFocusableElement,
    $lastFocusableElement;

$(document).ready(function() {
  $hamburgerMenuBtn = $("#Menu-Button"),
    $slideNav = $("#slide-nav"),
    $closeBtn = $("#close"),
    $main = $("main"),
    $focusableInNav = $('#slide-nav button, #slide-nav [href], #slide-nav input, #slide-nav select, #slide-nav textarea, #slide-nav [tabindex]:not([tabindex="-1"])');
  if ($focusableInNav.length) {
    $firstFocusableElement = $focusableInNav.first();
    $lastFocusableElement = $focusableInNav.last();
  }
  addEventListeners();
});

function addEventListeners() {
  $hamburgerMenuBtn.click(openNav);
  $closeBtn.click(closeNav);
  $slideNav.on("keyup", closeNav);
  $firstFocusableElement.on("keydown", moveFocusToBottom);
  $lastFocusableElement.on("keydown", moveFocusToTop);
}

function openNav() {
  $slideNav.addClass("visible active");
  setTimeout(function() {
    $firstFocusableElement.focus()
  }, 1);
  $main.attr("aria-hidden", "true");
  $hamburgerMenuBtn.attr("aria-hidden", "true");
}

function closeNav(e) {
  if (e.type === "keyup" && e.key !== "Escape") {
    return;
  }

  $slideNav.removeClass("active");
  $main.removeAttr("aria-hidden");
  $hamburgerMenuBtn.removeAttr("aria-hidden");
  setTimeout(function() {
    $hamburgerMenuBtn.focus()
  }, 1);
  setTimeout(function() {
    $slideNav.removeClass("visible")
  }, 501);
}

function moveFocusToTop(e) {
  if (e.key === "Tab" && !e.shiftKey) {
    e.preventDefault();
    $firstFocusableElement.focus();
  }
}

function moveFocusToBottom(e) {
  if (e.key === "Tab" && e.shiftKey) {
    e.preventDefault();
    $lastFocusableElement.focus()
  }
}

//topbutton = document.getElementById("topBtn");

// When the user clicks on the button, scroll to the top of the document
function topFunction() {
  document.body.scrollTop = 0; // For Safari
  document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
}


//Home Rolling Counter

// calculate page height (keeping element position in mind)

$(document).scroll(function(e){

		console.log(e);
    		var relevantToHeight = 1 + ($(window).scrollTop())/(($(document).height() - 0.02245*$(window).width())/5);

    // (magic if statement here that determines when html should change)
        $(".number").html(Math.round(relevantToHeight));
})

// project page scroller
$(document).scroll(function(e){

  console.log(e);
      var relevantToHeight = 1 + ($(window).scrollTop())/(($(document).height() - 0.02245*$(window).width())/6);

  // (magic if statement here that determines when html should change)
      $(".number_sacredground").html(Math.round(relevantToHeight));
})

//Work Gallery Filters

//Store a function that loops through .process-step element and shows it
//The filterSelection() function looks for the CSS class named in the parameter, here variable "c"
function filterSelection(c) {
  var thumbnails = document.getElementsByClassName("gallery__column");
  if (c == "all") c = "";
  // Add the "filter--show" class (display:block) to the filtered thumbnails, and remove the "filter--show" class from the elements that are not selected
  for (var i = 0; i < thumbnails.length; i++) {
    removeFilter(thumbnails[i], "filter--show");
    if (thumbnails[i].className.indexOf(c) > -1) addFilter(thumbnails[i], "filter--show");
  }
}

// Store a function that shows filtered elements
function addFilter(element, name) {
  //Used in filterSelection() as addFilter(thumbnails[i], "filter--show")
  //Then element is document.getElementsByClassName("gallery__column")[i]
  //Then name is CSS class .filter--show in the above example; filterSelection("filter--logos") would find all logo elements
  //Saves an array listing all the CSS classes an element has (since CSS classes are listed w/spaces in between in HTML)
  var arr1 = element.className.split(" ");
  //Saves an array of number of elements with the .filter--show class as instances of how many times .filter--show occurs
  var arr2 = name.split(" ");
  //Loops as many times as there are instances of .filter--show
  for (var i = 0; i < arr2.length; i++) {
    // .indexOF() searches for the occurence of .filter--show in arr2; result of -1 means there are 0 occurrences
    //If the list of CSS classes includes 0 occurrences of .filter--show, then add .filter--show to that element
    if (arr1.indexOf(arr2[i]) == -1) {
      element.className += " " + arr2[i];
    }
  }
}

// Store a function that hides elements that are not selected
function removeFilter(element, name) {
  console.log(12);
  var arr1 = element.className.split(" ");
  var arr2 = name.split(" ");
  for (var i = 0; i < arr2.length; i++) {
    // As long as the CSS class list has ANY occurrences of .filter--show...
    while (arr1.indexOf(arr2[i]) > -1) {
      // ...remove the latest occurrence of .filter--show in the CSS class list (removes 1 at a time)
      arr1.splice(arr1.indexOf(arr2[i]), 1);
    }
  }
  // Re-join the ammended CSS class list back to the HTML element
  element.className = arr1.join(" ");
}

var gallery__filterContainer = document.getElementById("gallery__filters");
var gallery__filters = gallery__filterContainer.getElementsByClassName("gallery__filter");
for (var i = 0; i < gallery__filters.length; i++) {
  //Listen for a mouse click on each
  gallery__filters[i].addEventListener("click", function() {
    //If one registers a click then remove the CSS class .tag--active from the old button and give it instead to the new button that registered the click
    var current = document.getElementsByClassName("tag--active");
    current[0].className = current[0].className.replace(" tag--active", "");
    this.className += " tag--active";
  });
}

filterSelection("all");

document.getElementById('filter--show-all').addEventListener("click", function() {
  filterSelection("all");
}, false);

document.getElementById('filter--logos').addEventListener("click", function() { 
  filterSelection("tag--logos");
}, false);

document.getElementById('filter--identity').addEventListener("click", function() {
  filterSelection("tag--identity");
}, false);

document.getElementById('filter--illustration').addEventListener("click", function() {
  filterSelection("tag--illustration");
}, false);

document.getElementById('filter--web-development').addEventListener("click", function() { 
  filterSelection("tag--web-development");
}, false);

document.getElementById('filter--packaging').addEventListener("click", function() {
  filterSelection("tag--packaging");
}, false);

